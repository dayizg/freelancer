/*COMENZAMOS CON LA BASE DE LA TIPOGRAFIA*/

/*DEFINIMOS EL COLOR*/
:root {
    /*Esto seria Custom properties (Propiedad personalizadas)*/
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: rgba(255, 193, 7, 1);
    --secundario: #0097A7;
    --gris: #757575;
    --grisClaro: #dfe9f3;
    /*Aqui se puede colocar varios valores que se 
    deseen reutilizar*/
}

/*Globales*/

html {
    font-size: 62.5%;
    box-sizing: border-box;
    /*Hack para Box Model, nos ayuda a reducir los espacios 
    que quede parejito las cajas una de otra*/
    scroll-snap-type: y mandatory; /*Esto logra que de hagas scroll y se mueva hacia cada seccion directamente*/
}


/**  Scrooll Snap **/
.servicios,
.navegacion-principal,
.formulario {
    scroll-snap-align: center;
    scroll-snap-stop: always;
}

*,*:before,*:after {
    box-sizing: inherit;

    /*.titulo:before { /*before es para darle contenido al css, sin embargo
    no aparece en el inspection del html en el navegador.*/
    /* content: 'Esto va despues del titulo';/*
}*/
}

body {
    font-size: 16px;
    /* 1rem = 10px */
    font-family: 'krub', sans-serif;
    background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%);
    /*tambien se puede usar to right, */
}

.contenedor {
    /*Navegacion*/
    max-width: 120rem;
    /*el max- es para que indicarle que tome maximo hasta 1200px,
    si no hay ese espacio, pues que tome el 100% del contenedor*/
    /*El orden de los margin es como el reloj: arriba (top 12), derecha (right 3), bottom(abajo 6), left(izquierda 9)*/
    margin: 0 auto;
    /*Nos dira en que posicion se colocara el elemento, queremos que este centrado*/
}

.boton {
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    /*Para quitar el subrayado de la palabra*/
    text-transform: uppercase;
    /*Para Colocar en Mayuscula la plalabra*/
    font-weight: bold;
    /*Para negrita*/
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;
}

/*Para llamar estos medias queris, despues de haber creado los snip, solo decimos mq y lo invoca*/
/*Aparte los media queris son bueno porque automaticamente heredan lo que tienes arriba en la clase, siempre y cuando metas la clase*/

@media (min-width: 768px) {
    .boton {
        width: auto;
    }
}

/*Para colocarle la interacción de la mano en el boton*/
.boton:hover{
    cursor: pointer;
}

.sombra {
    /*Agregare la sombra: el codigo lo sacamos de la pagina cssmatic.com*/
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 0.54);
    -moz-box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 0.54);
    box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 0.54);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

/* Tipografia */

h1 {
    font-size: 3.8rem;
}

h2 {
    font-size: 2.8rem;
}

h3 {
    font-size: 1.8rem;
}

h1,
h2,
h3 {
    text-align: center;
}

/* Titulos */

.titulo span {
    font-size: 2rem;
}


/** Utilidades, propiedades**/

/*w(es de width)sm(de pequeño)*/
.w-sm-100 {
    width: 100%;
}
/*Para que coloque el boton al final de la derecha*/
@media( min-width:768px){
    .w-sm-100{
        width: auto;
    }

}
.flex {
    display: flex;
}

.alinear-derecha{
    justify-content: flex-end;

}
/*Navegacion Principal*/
.nav-bg {
    /*Para el color de la navegación*/
    background-color: var(--secundario);
    /*Color definidos arriba en la paleta de colores*/

}

.navegacion-principal {
    display: flex;
    /*1. Esto es para hacer flexible el contenido*/
    flex-direction: column;
    /*2. Va acompañado del punto 1, ya que el punto anterior viene de izquierda a derecha(fila) por default,
    con este flex direction, lo que hariamos es cambiar la orientación a columna, en vez de fila, que es como viene por default.*/

    /* justify-content: space-between; 2. Just content es para darle la orientacion al contenido.
    Y space-between es para darle el espaciado*/
}

@media (min-width: 768px) {
    .navegacion-principal {
        /*Clase heredada*/
        flex-direction: row;
        /*Tiene todo lo de la clase heredado, excepto esto, que se añadio*/
        justify-content: space-between;
    }
}

.navegacion-principal a {
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    /*Esto hace que no aparezca el subrayado de las palabras de la navegacion*/
    font-size: 2rem;
    font-weight: 700;
    /*Bold o 700 es lo mismo para colocar la letra en negrita*/
    padding: 1rem;
}

.navegacion-principal a:hover {
    /*Hover es para darle la animacion cuando paso el cursor*/
    /*Muy imporntante no dejar espacios en blanco entre la 1 y 2 puntos, lo tomara como otra cosa*/
    background-color: var(--primario);
    color: var(--oscuro);
}

/*Imagen*/

.hero {
    /*Padre de los heros*/
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    /*evitar que la imagen se repita por default*/
    background-size: cover;
    /*toma todo el ancho disponible de la pantalla*/
    height: 450px;
    position: relative;
    /*Como .hero es el elemento padre, se le coloca siempre 
    position relative y alhijo position absoluta.*/
    margin-bottom: 2rem;
}

.contenido-hero {
    /*Hijo de Hero*/
    position: absolute;
    background-color: rgba(0, 0, 0, .7);
    /*la anterior*/
    background-color: rgb(0 0 0 / 70%);
    width: 100%;
    height: 100%;

    /*PARA ALINEAR VERTICAL Y HORIZONTALMENTE (quede en el centro del centro)*/
    /*Queremos posicionar el contenido en el centro, del centro, entonces este como es el hijo comenzamos:*/
    display: flex;
    /*Este hace que coloque el contenido de izq a dcha*/
    flex-direction: column;
    /*Esto va a hacer que el contenido se vaya de arriba hacia abajo*/
    /* Dato: cuando alineamos a Flex direction Column, ya no es necesario alinear horizontalmente con
justify content. Se utilizaría align-items.*/
    align-items: center;
    /*y se le coloca un center para que centre el contenido*/
    /*Ahora le colocamos el justify-content center para centrarlo verticalmente. */
    justify-content: center;
}

/*Darle color a: >Diseño y Desarrollo Web  y Madrid*/
.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}

.contenido-hero .ubicacion {
    display: flex;
    align-items: flex-end;
    /*Para que alinee la ubicacion de Madrid a la pata del icono*/

}

/** Servicios **/
@media (min-width: 768px) { 
    .servicios{
        /*Grid Templates*/
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* Descripcion en: https://www.notion.so/45-Introducci-n-a-CSS-Grid-30176ca1efb4425aae1aabbe077300bd?pvs=4
    /*/
        column-gap: 1rem; /* es como un margencontrol total de cuanto quiere que se haga la separación */
    } 
}

.servicio{
    display: flex; /*Nos coloca de izquierda a derecha*/
    flex-direction: column;
    align-items: center;

}

.servicio h3{
    color: var(--secundario);
    font-weight: normal; /*Se coloca este font, ya que los h3 tienen un estilo por defecto*/
}

.servicio p{
    line-height: 2; /*Para darle espació al parrafo de interlineado*/
    text-align: center;
}

.servicio .iconos {
    height: 15rem; /*Altura*/
    width: 15rem;
    background-color: var(--primario);/*Color amarillo*/
    border-radius: 50%; /*Esquinas redondeadas*/
    display: flex;/*Centrar iconos horizontal, coloca icono uno al lado del otro*/
    justify-content: space-evenly; /*Lo dejara centrado*/
    align-items: center; /*Este permite alinear verticalmente*/
}

/*Contacto*/

.formulario {
    background-color: var(--gris);
    width: min(60rem, 100%);/*Min utiliza el valor más pequeño de pixeles*/
    margin: 0 auto; /*Para que lo centre horzontalmente*/
    /*En que casp usas margin 0 auto para centrar horizaontalmente o justify content? 
    Margin 0 auto; es mas recomendado usarlo cuando se tiene un elemento como un formulario en este caso y cuyo padre no es un display flex y que sea un elemento de tipo block.*/
    padding: 2rem;
    border-radius: 1rem;
}

.formulario fieldset {
    border: none; /*Esto es para que quite el border de formulario  por defecto*/
}

.formulario legend{
    margin: 0 auto; /*Para cnetrar el texto en los navegadores, tuve que colocar este, ya que si no no me lo centrabas*/
    text-align: center; /*Este no funciona bien con Firefox, no me centra el texto*/
    font-size: 1.8rem;
    text-transform: uppercase; /*Para mayusculas*/
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario);
}

@media (min-width: 768px) {
    .contenedor-campos{
        display: grid;
        grid-template-columns: 50% 50%; /*Dvidir 2 columnas*/
        grid-template-rows: auto auto 20rem ;
        column-gap: 1rem; /*Separación de columna*/
    } 

    /*Padres Campos - Hijos el 3 es corroe y el 4 es mensaje */
    .campo:nth-child(3), 
    .campo:nth-child(4) {
        grid-column: 1 / 3; /*Para que el campo de correo abarque todo el ancho de la 1 a la 3era columna*/
    }
} 

.campo {
margin-bottom: 1rem;
}

.campo label {
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

/*Esto es Selector de Atributo: Seleciona los campos que sean de tipo text
y lo separamos con una coma, si es que queremos añadirle la misma propiedad a otro atributo 
*/

/*.campo input[type="text"], 
.campo input[type="tel"] { 
    background-color: red;
}
    */
    
.campo textarea{
        height: 15rem;
    }

.input-text{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

/* Footer */
.footer{
    text-align: center;
}


/* NOTITAS ADICIONALES */
/*Ideal Solo cargar las fuentes de letras que sean 
necesarias, Ya que hay muchas el sitio será muy
pesado.*/
/* h1.titulo span{ /* Esto se llama especifidad en CSS */
/*text-align: center;
    font-size: 3.8rem;
    color: red;
}/*

.titulo span{
    font-size: 2rem;
}

/*La medida de Rem suena mejor por que es mas facil de colocar las medidas ya que hay muchos tipos de pantallas, relon
televisor, etc, y esto va permitir que se adapte a todos los tamaños.*/

/*id No es recomendable usar muchas id, afectan
algo llamado especifidad */

/* Para llamar una vaiable seria asi por ejemplo
 color: var(--primarios);*/